generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  nombre    String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Category {
  id          Int       @id @default(autoincrement())
  nombre      String
  descripcion String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  products    Product[]

  @@map("categories")
}

model Product {
  id             Int             @id @default(autoincrement())
  nombre         String
  descripcion    String?
  precio         Decimal         @db.Decimal(10, 2)
  stock          Int             @default(0)
  categoriaId    Int             @map("categoria_id")
  createdAt      DateTime        @default(now()) @map("created_at")
  updatedAt      DateTime        @updatedAt @map("updated_at")
  category       Category        @relation(fields: [categoriaId], references: [id], onDelete: Cascade)
  stockMovements StockMovement[]

  @@index([categoriaId], map: "products_categoria_id_fkey")
  @@map("products")
}

model StockMovement {
  id        Int          @id @default(autoincrement())
  productId Int          @map("product_id")
  tipo      MovementType
  cantidad  Int
  motivo    String?
  createdAt DateTime     @default(now()) @map("created_at")
  product   Product      @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId], map: "stock_movements_product_id_fkey")
  @@map("stock_movements")
}

enum Role {
  USER
  ADMIN
}

enum MovementType {
  ENTRADA
  SALIDA
}
